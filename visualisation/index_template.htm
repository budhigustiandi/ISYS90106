<!doctype html>
<html lang="en">
<head>
	<meta charset="utf-8">
	<title>Project RATIH Main Page</title>
	<link rel="stylesheet" href="main.css">
	<link rel="stylesheet" href="https://unpkg.com/leaflet@1.3.1/dist/leaflet.css"
   integrity="sha512-Rksm5RenBEKSKFjgI3a41vrjkw4EVPlJ3+OiI65vTjIdo9brlAacEuKOiQ5OFh7cOI1bkDwLqdLw3Zg0cRJAAQ=="
   crossorigin="">
	<script src="https://unpkg.com/leaflet@1.3.1/dist/leaflet.js"
   integrity="sha512-/Nsx9X4HebavoBvEBuyp3I7od5tA0UzAxs+j83KgC8PU0kgB4XiK4Lfe4y4cgBtaRJQEIFCW+oC506aPT2L1zw=="
   crossorigin=""></script>
	<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
</head>
<body>
<p>Click <a href="https://scratchpad.sensorup.com/OGCSensorThings/v1.0/Things(1684190)?$expand=Locations,Datastreams" target="_blank"><button>here</button></a> to show data in JSON format</p>
<h1>Thing</h1>
	<p><span class="bold">ID in the server: </span>1684190</p>
	<p><span class="bold">Name: </span><span id="thing_name"></span></p>
	<p><span class="bold">Description: </span><span id="thing_description"></span></p>
	<p><span class="bold">Properties: </span><span id="thing_property"></span></p>
	<a href="read_update_thing.htm"><button>Update Thing</button></a>
	<h1>Location</h1>
	<p><span class="bold">Name: </span><span id="location_name"></span></p>
	<p><span class="bold">Description: </span><span id="location_description"></span></p>
	<p><span class="bold">Encoding: </span><span id="location_encoding"></span></p>
	<p><span class="bold">Type: </span><span id="location_type"></span></p>
	<p><span class="bold">Coordinates: </span></p>
	<ul>
		<li><span class="bold">Longitude: </span><span id="location_longitude"></span></li>
		<li><span class="bold">Latitude: </span><span id="location_latitude"></li>
	</ul>
	<a href="read_update_location.htm"><button>Update Location</button></a>
	<div id="mapid"></div>
	<h1>Datastream</h1>
	<script>
		// Read the data in JSON format from the SensorUp server then update the page based on the data
		var thing_id = 1684190;
		console.log("Thing ID: " + thing_id);
		var thing = $.ajax({
			url: "https://scratchpad.sensorup.com/OGCSensorThings/v1.0/Things(" + thing_id + ")?$expand=Locations,Datastreams",
			type: "GET",
			contentType: "application/json; charset=utf-8",
			success: function(data){
				// Read Thing entity				
				console.log("Thing Name: " + thing.responseJSON.name);
				document.querySelector("#thing_name").textContent = thing.responseJSON.name;
				console.log("Thing Description: " + thing.responseJSON.description);
				document.querySelector("#thing_description").textContent = thing.responseJSON.description;
				console.log("Thing Properties: " + JSON.stringify(thing.responseJSON.properties));
				document.querySelector("#thing_property").textContent = JSON.stringify(thing.responseJSON.properties);
				// Read Location entity
				var location = JSON.stringify(thing.responseJSON.Locations);
				location = location.slice(1,location.length-1);
				console.log("Location: " + location);
				location = JSON.parse(location);
				console.log("Location Name: " + location.name);
				document.querySelector("#location_name").textContent = location.name;
				console.log("Location Description: " + location.description);
				document.querySelector("#location_description").textContent = location.description;
				console.log("Location Encoding: " + location.encodingType);
				document.querySelector("#location_encoding").textContent = location.encodingType;
				console.log("Location Type: " + location.location.type);
				document.querySelector("#location_type").textContent = location.location.type;
				var location_longitude = location.location.coordinates[0];
				console.log("Location Longitude: " + location_longitude);
				document.querySelector("#location_longitude").textContent = location_longitude;
				var location_latitude = location.location.coordinates[1];
				console.log("Location Latitude: " + location_latitude);
				document.querySelector("#location_latitude").textContent = location_latitude;
				// Create map visualisation
				var mymap = L.map('mapid').setView([location_latitude, location_longitude], 17);
				L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token=pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4NXVycTA2emYycXBndHRqcmZ3N3gifQ.rJcFIG214AriISLbB6B5aw', {
					attribution: 'Map data &copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors, <a href="http://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery Â© <a href="http://mapbox.com">Mapbox</a>',
					maxZoom: 18,
					id: 'mapbox.streets'
				}).addTo(mymap);
				var marker = L.marker([location_latitude, location_longitude]).addTo(mymap);
				marker.bindPopup("Thing's location.").openPopup();
				// Read Datastream(s) entity(ies)
				datastream = thing.responseJSON.Datastreams;
				console.log("Number of datastream: " + datastream.length);
				for (let i = 0; i < datastream.length; i++) {
					let datastream_id = datastream[i]["@iot.id"];
					console.log("Datastream ID: " + datastream_id);
					let datastream_name = datastream[i].name
					console.log("Datastream Name: " + datastream_name);
					// Create unique div to contain each datastream
					let element = document.createElement("div");
					let attribute = document.createAttribute("class");
					attribute.value = "container_" + datastream_id;
					element.setAttributeNode(attribute);
					document.querySelector("body").appendChild(element);
					// Create h2 element
					element = document.createElement("h2");
					attribute = document.createAttribute("class");
					attribute.value = "datastream_" + datastream_id;
					element.setAttributeNode(attribute);
					let text = document.createTextNode(datastream_name);
					element.appendChild(text);
					document.querySelector(".container_" + datastream_id).appendChild(element);
					element = document.createElement("span");
					text = document.createTextNode(" show ");
					element.appendChild(text);
					document.querySelector("h2.datastream_" + datastream_id).appendChild(element);
					element = document.createElement("a");
					attribute = document.createAttribute("href");
					attribute.value = "datastream_" + datastream_id + "_chart.htm";
					element.setAttributeNode(attribute);
					attribute = document.createAttribute("target");
					attribute.value = "_blank";
					element.setAttributeNode(attribute);
					text = document.createTextNode("chart");
					element.appendChild(text);
					document.querySelector("h2.datastream_" + datastream_id + " span").appendChild(element);
					text = document.createTextNode(" | ");
					document.querySelector("h2.datastream_" + datastream_id + " span").appendChild(text);
					element = document.createElement("a");
					attribute = document.createAttribute("href");
					attribute.value = "datastream_" + datastream_id + "_gauge.htm";
					element.setAttributeNode(attribute);
					attribute = document.createAttribute("target");
					attribute.value = "_blank";
					element.setAttributeNode(attribute);
					text = document.createTextNode("gauge");
					element.appendChild(text);
					document.querySelector("h2.datastream_" + datastream_id + " span").appendChild(element);
					//Create Datastream ID
					element = document.createElement("p");
					document.querySelector(".container_" + datastream_id).appendChild(element);
					element = document.createElement("span");
					attribute = document.createAttribute("class");
					attribute.value = "bold";
					element.setAttributeNode(attribute);
					text = document.createTextNode("ID: ");
					element.appendChild(text);
					document.querySelector(".container_" + datastream_id + " p:last-child").appendChild(element);
					text = document.createTextNode(datastream_id);
					document.querySelector(".container_" + datastream_id + " p:last-child").appendChild(text);
					// Create Datastream Description
					console.log("Datastream Description: " + datastream[i].description);
					element = document.createElement("p");
					document.querySelector(".container_" + datastream_id).appendChild(element);
					element = document.createElement("span");
					attribute = document.createAttribute("class");
					attribute.value = "bold";
					element.setAttributeNode(attribute);
					text = document.createTextNode("Description: ");
					element.appendChild(text);
					document.querySelector(".container_" + datastream_id + " p:last-child").appendChild(element);
					text = document.createTextNode(datastream[i].description);
					document.querySelector(".container_" + datastream_id + " p:last-child").appendChild(text);
					// Create Datastream Observation Type
					console.log("Datastream Observation Type: " + datastream[i].observationType);
					element = document.createElement("p");
					document.querySelector(".container_" + datastream_id).appendChild(element);
					element = document.createElement("span");
					attribute = document.createAttribute("class");
					attribute.value = "bold";
					element.setAttributeNode(attribute);
					text = document.createTextNode("Observation Type: ");
					element.appendChild(text);
					document.querySelector(".container_" + datastream_id + " p:last-child").appendChild(element);
					text = document.createTextNode(datastream[i].observationType);
					document.querySelector(".container_" + datastream_id + " p:last-child").appendChild(text);
					// Create Datastream Unit of Measurement Name
					console.log("Datastream Unit of Measurement Name: " + datastream[i].unitOfMeasurement.name);
					element = document.createElement("p");
					document.querySelector(".container_" + datastream_id).appendChild(element);
					element = document.createElement("span");
					attribute = document.createAttribute("class");
					attribute.value = "bold";
					element.setAttributeNode(attribute);
					text = document.createTextNode("Unit of Measurement: ");
					element.appendChild(text);
					document.querySelector(".container_" + datastream_id + " p:last-child").appendChild(element);
					text = document.createTextNode(datastream[i].unitOfMeasurement.name);
					document.querySelector(".container_" + datastream_id + " p:last-child").appendChild(text);
					// Create Datastream Unit of Measurement Symbol
					console.log("Datastream Unit of Measurement Symbol: " + datastream[i].unitOfMeasurement.symbol);
					element = document.createElement("p");
					document.querySelector(".container_" + datastream_id).appendChild(element);
					element = document.createElement("span");
					attribute = document.createAttribute("class");
					attribute.value = "bold";
					element.setAttributeNode(attribute);
					text = document.createTextNode("Symbol: ");
					element.appendChild(text);
					document.querySelector(".container_" + datastream_id + " p:last-child").appendChild(element);
					text = document.createTextNode(datastream[i].unitOfMeasurement.symbol);
					document.querySelector(".container_" + datastream_id + " p:last-child").appendChild(text);
					// Create Datastream Unit of Measurement Definition
					console.log("Datastream Unit of Measurement Definition: " + datastream[i].unitOfMeasurement.definition);
					element = document.createElement("p");
					document.querySelector(".container_" + datastream_id).appendChild(element);
					element = document.createElement("span");
					attribute = document.createAttribute("class");
					attribute.value = "bold";
					element.setAttributeNode(attribute);
					text = document.createTextNode("Definition: ");
					element.appendChild(text);
					document.querySelector(".container_" + datastream_id + " p:last-child").appendChild(element);
					text = document.createTextNode(datastream[i].unitOfMeasurement.definition);
					document.querySelector(".container_" + datastream_id + " p:last-child").appendChild(text);
					// Create Observed Property heading
					element = document.createElement("h3");
					text = document.createTextNode("Observed Property");
					element.appendChild(text);
					document.querySelector(".container_" + datastream_id).appendChild(element);
					// Create unordered list elements under Observed Property
					element = document.createElement("ul");
					attribute = document.createAttribute("class");
					attribute.value = "observed_property_datastream_" + datastream_id;
					element.setAttributeNode(attribute);
					document.querySelector(".container_" + datastream_id).appendChild(element);
					// Create Sensor heading
					element = document.createElement("h3");
					text = document.createTextNode("Sensor");
					element.appendChild(text);
					document.querySelector(".container_" + datastream_id).appendChild(element);
					// Create unordered list elements under Sensor
					element = document.createElement("ul");
					attribute = document.createAttribute("class");
					attribute.value = "sensor_datastream_" + datastream_id;
					element.setAttributeNode(attribute);
					document.querySelector(".container_" + datastream_id).appendChild(element);
					print_datastream_detail(datastream_id);
				}
				let element = document.createElement("a");
				let attribute = document.createAttribute("href");
				attribute.value = "read_update_datastream.htm";
				element.setAttributeNode(attribute);
				attribute = document.createAttribute("id");
				attribute.value = "update_datastream";
				element.setAttributeNode(attribute);
				document.querySelector("body").appendChild(element);
				element = document.createElement("button");
				let text = document.createTextNode("Update Datastream(s)");
				element.appendChild(text);
				document.querySelector("#update_datastream").appendChild(element);
			},
			error: function(response, status){
				console.log(response);
				console.log(status);
			}
		});
		function print_datastream_detail(datastream_id){
			var datastream_detail = $.ajax({
				url: "https://scratchpad.sensorup.com/OGCSensorThings/v1.0/Datastreams(" + datastream_id + ")?$expand=ObservedProperty,Sensor",
				type: "GET",
				contentType: "application/json; charset=utf-8",
				success: function(data){
					// Observed Property Name
					console.log("Observed Property Name: " + datastream_detail.responseJSON.ObservedProperty.name);
					let element = document.createElement("li");
					document.querySelector(".container_" + datastream_id + " ul.observed_property_datastream_" + datastream_id).appendChild(element);
					element = document.createElement("span");
					let attribute = document.createAttribute("class");
					attribute.value = "bold";
					element.setAttributeNode(attribute);
					text = document.createTextNode("Name: ");
					element.appendChild(text);
					document.querySelector(".container_" + datastream_id + " ul.observed_property_datastream_" + datastream_id + " li:last-child").appendChild(element);
					text = document.createTextNode(datastream_detail.responseJSON.ObservedProperty.name);
					document.querySelector(".container_" + datastream_id + " ul.observed_property_datastream_" + datastream_id + " li:last-child").appendChild(text);
					// Observed Property Description
					console.log("Observed Property Description: " + datastream_detail.responseJSON.ObservedProperty.description);
					element = document.createElement("li");
					document.querySelector(".container_" + datastream_id + " ul.observed_property_datastream_" + datastream_id).appendChild(element);
					element = document.createElement("span");
					attribute = document.createAttribute("class");
					attribute.value = "bold";
					element.setAttributeNode(attribute);
					text = document.createTextNode("Description: ");
					element.appendChild(text);
					document.querySelector(".container_" + datastream_id + " ul.observed_property_datastream_" + datastream_id + " li:last-child").appendChild(element);
					text = document.createTextNode(datastream_detail.responseJSON.ObservedProperty.description);
					document.querySelector(".container_" + datastream_id + " ul.observed_property_datastream_" + datastream_id + " li:last-child").appendChild(text);
					// Observed Property Definition
					console.log("Observed Property Definition: " + datastream_detail.responseJSON.ObservedProperty.definition);
					element = document.createElement("li");
					document.querySelector(".container_" + datastream_id + " ul.observed_property_datastream_" + datastream_id).appendChild(element);
					element = document.createElement("span");
					attribute = document.createAttribute("class");
					attribute.value = "bold";
					element.setAttributeNode(attribute);
					text = document.createTextNode("Definition: ");
					element.appendChild(text);
					document.querySelector(".container_" + datastream_id + " ul.observed_property_datastream_" + datastream_id + " li:last-child").appendChild(element);
					text = document.createTextNode(datastream_detail.responseJSON.ObservedProperty.definition);
					document.querySelector(".container_" + datastream_id + " ul.observed_property_datastream_" + datastream_id + " li:last-child").appendChild(text);
					// Sensor Name
					console.log("Sensor Name: " + datastream_detail.responseJSON.Sensor.name);
					element = document.createElement("li");
					document.querySelector(".container_" + datastream_id + " ul.sensor_datastream_" + datastream_id).appendChild(element);
					element = document.createElement("span");
					attribute = document.createAttribute("class");
					attribute.value = "bold";
					element.setAttributeNode(attribute);
					text = document.createTextNode("Name: ");
					element.appendChild(text);
					document.querySelector(".container_" + datastream_id + " ul.sensor_datastream_" + datastream_id + " li:last-child").appendChild(element);
					text = document.createTextNode(datastream_detail.responseJSON.Sensor.name);
					document.querySelector(".container_" + datastream_id + " ul.sensor_datastream_" + datastream_id + " li:last-child").appendChild(text);
					// Sensor Description
					console.log("Sensor Description: " + datastream_detail.responseJSON.Sensor.description);
					element = document.createElement("li");
					document.querySelector(".container_" + datastream_id + " ul.sensor_datastream_" + datastream_id).appendChild(element);
					element = document.createElement("span");
					attribute = document.createAttribute("class");
					attribute.value = "bold";
					element.setAttributeNode(attribute);
					text = document.createTextNode("Description: ");
					element.appendChild(text);
					document.querySelector(".container_" + datastream_id + " ul.sensor_datastream_" + datastream_id + " li:last-child").appendChild(element);
					text = document.createTextNode(datastream_detail.responseJSON.Sensor.description);
					document.querySelector(".container_" + datastream_id + " ul.sensor_datastream_" + datastream_id + " li:last-child").appendChild(text);
					// Sensor Encoding Type
					console.log("Sensor Encoding Type: " + datastream_detail.responseJSON.Sensor.encodingType);
					element = document.createElement("li");
					document.querySelector(".container_" + datastream_id + " ul.sensor_datastream_" + datastream_id).appendChild(element);
					element = document.createElement("span");
					attribute = document.createAttribute("class");
					attribute.value = "bold";
					element.setAttributeNode(attribute);
					text = document.createTextNode("Encoding Type: ");
					element.appendChild(text);
					document.querySelector(".container_" + datastream_id + " ul.sensor_datastream_" + datastream_id + " li:last-child").appendChild(element);
					text = document.createTextNode(datastream_detail.responseJSON.Sensor.encodingType);
					document.querySelector(".container_" + datastream_id + " ul.sensor_datastream_" + datastream_id + " li:last-child").appendChild(text);
					// Sensor Metadata
					console.log("Sensor Metadata: " + datastream_detail.responseJSON.Sensor.metadata);
					element = document.createElement("li");
					document.querySelector(".container_" + datastream_id + " ul.sensor_datastream_" + datastream_id).appendChild(element);
					element = document.createElement("span");
					attribute = document.createAttribute("class");
					attribute.value = "bold";
					element.setAttributeNode(attribute);
					text = document.createTextNode("Metadata: ");
					element.appendChild(text);
					document.querySelector(".container_" + datastream_id + " ul.sensor_datastream_" + datastream_id + " li:last-child").appendChild(element);
					text = document.createTextNode(datastream_detail.responseJSON.Sensor.metadata);
					document.querySelector(".container_" + datastream_id + " ul.sensor_datastream_" + datastream_id + " li:last-child").appendChild(text);
				},
				error: function(response, status){
					console.log(response);
					console.log(status);
				}
			});
		}
	</script>
	
<!-- <h2>Room Temperature <span>show <a href="datastream_1684195_chart.htm" target="_blank">chart</a> | <a href="datastream_1684195_gauge.htm" target="_blank">gauge</a></span></h2>
		<p><span class="bold">ID: </span>1684195</p>
		<p><span class="bold">Description: </span>Datastream for recording temperature</p>
		<p><span class="bold">Observation Type: </span>http://www.opengis.net/def/observationType/OGC-OM/2.0/OM_Measurement</p>
		<p><span class="bold">Unit of Measurement: </span>Degree Celcius</p>
		<p><span class="bold">Symbol: </span>degC</p>
		<p><span class="bold">Definition: </span>http://www.qudt.org/qudt/owl/1.0.0/unit/Instances.html#DegreeCelcius</p> 
<h3>Observed Property</h3>
			<ul>
				<li><span class="bold">Name: </span>Area Temperature</li>
				<li><span class="bold">Description: </span>A physical quantity expressing hot and cold</li>
				<li><span class="bold">Definition: </span>http://www.qudt.org/qudt/owl/1.0.0/quantity/Instances.html#AreaTemperature</li>
			</ul>
<h3>Sensor</h3>
			<ul>
				<li><span class="bold">Name: </span>DHT11</li>
				<li><span class="bold">Description: </span>DHT11 temperature and humidity module</li>
				<li><span class="bold">Encoding Type: </span>application/pdf</li>
				<li><span class="bold">Metadata: </span>https://akizukidenshi.com/download/ds/aosong/DHT11.pdf</li>
			</ul>
<h2>Room Humidity <span>show <a href="datastream_1684198_chart.htm" target="_blank">chart</a> | <a href="datastream_1684198_gauge.htm" target="_blank">gauge</a></span></h2>
		<p><span class="bold">ID: </span>1684198</p>
		<p><span class="bold">Description: </span>Datastream for recording humidity</p>
		<p><span class="bold">Observation Type: </span>http://www.opengis.net/def/observationType/OGC-OM/2.0/OM_Measurement</p>
		<p><span class="bold">Unit of Measurement: </span>Percentage</p>
		<p><span class="bold">Symbol: </span>%</p>
		<p><span class="bold">Definition: </span>1 part of 100</p> 
<h3>Observed Property</h3>
			<ul>
				<li><span class="bold">Name: </span>Absolute Humidity</li>
				<li><span class="bold">Description: </span>Absolute humidity is the mass of water in a particular volume of air. It is a measure of the density of water vapor in an atmosphere.</li>
				<li><span class="bold">Definition: </span>http://www.qudt.org/qudt/owl/1.0.0/quantity/Instances.html#AbsoluteHumidity</li>
			</ul>
<h3>Sensor</h3>
			<ul>
				<li><span class="bold">Name: </span>DHT11</li>
				<li><span class="bold">Description: </span>DHT11 temperature and humidity module</li>
				<li><span class="bold">Encoding Type: </span>application/pdf</li>
				<li><span class="bold">Metadata: </span>https://akizukidenshi.com/download/ds/aosong/DHT11.pdf</li>
			</ul>
<h2>Room Light Intensity <span>show <a href="datastream_1684201_chart.htm" target="_blank">chart</a> | <a href="datastream_1684201_gauge.htm" target="_blank">gauge</a></span></h2>
		<p><span class="bold">ID: </span>1684201</p>
		<p><span class="bold">Description: </span>Datastream for recording light intensity</p>
		<p><span class="bold">Observation Type: </span>http://www.opengis.net/def/observationType/OGC-OM/2.0/OM_Measurement</p>
		<p><span class="bold">Unit of Measurement: </span>Lux</p>
		<p><span class="bold">Symbol: </span>lx</p>
		<p><span class="bold">Definition: </span>http://www.qudt.org/qudt/owl/1.0.0/unit/Instances.html#Lux</p> 
<h3>Observed Property</h3>
			<ul>
				<li><span class="bold">Name: </span>Luminous Flux</li>
				<li><span class="bold">Description: </span>Luminous Flux or Luminous Power is the measure of the perceived power of light. It differs from radiant flux, the measure of the total power of light emitted, in that luminous flux is adjusted to reflect the varying sensitivity of the human eye to different wavelengths of light.</li>
				<li><span class="bold">Definition: </span>http://www.qudt.org/qudt/owl/1.0.0/quantity/Instances.html#LuminousFlux</li>
			</ul>
<h3>Sensor</h3>
			<ul>
				<li><span class="bold">Name: </span>Photoresistor Light Sensor</li>
				<li><span class="bold">Description: </span>A Light Sensor is something that can be used to detect the current ambient light level - i.e. how bright/dark it is. It changes its resistance based on the amount of light that falls upon it.</li>
				<li><span class="bold">Encoding Type: </span>application/html</li>
				<li><span class="bold">Metadata: </span>http://education.rec.ri.cmu.edu/content/electronics/boe/light_sensor/1.html</li>
			</ul>-->
</body>
</html>
